# Generated by Django 5.2.3 on 2025-10-20 18:09

import Academico.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExerciseAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.CharField(db_index=True, max_length=64)),
                ('exercise_number', models.PositiveSmallIntegerField()),
                ('user_answer', models.TextField()),
                ('correct_answer', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='IntentoAcentuacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.CharField(max_length=50)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('autor', models.CharField(max_length=255)),
                ('editorial', models.CharField(max_length=255)),
                ('año', models.PositiveIntegerField()),
                ('archivo', models.FileField(upload_to=Academico.models.libro_upload)),
            ],
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(default='Lengua Castellana y Literatura', max_length=100)),
                ('nivel', models.CharField(choices=[('1', '1er Curso')], default='1', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Contenido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('archivo', models.FileField(upload_to='contenidos/')),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Academico.materia')),
            ],
        ),
        migrations.CreateModel(
            name='MovimientoAcentuacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('palabra_incorrecta', models.CharField(max_length=100)),
                ('palabra_correcta', models.CharField(max_length=100)),
                ('clasificacion', models.CharField(max_length=50)),
                ('intento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimientos', to='Academico.intentoacentuacion')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cedula', models.CharField(max_length=20, unique=True, verbose_name='Cédula de Identidad')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('nombre', models.CharField(max_length=80)),
                ('apellido', models.CharField(max_length=80)),
                ('role', models.CharField(choices=[('DOCENTE', 'Docente'), ('ESTUDIANTE', 'Estudiante')], max_length=12)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.CharField(db_index=True, max_length=64)),
                ('total_items', models.PositiveIntegerField()),
                ('correct_items', models.PositiveIntegerField()),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('breakdown', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PunctuationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_steps', models.PositiveIntegerField(default=8)),
                ('correct_steps', models.PositiveIntegerField()),
                ('percentage', models.FloatField()),
                ('recommendation', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resultado de puntuación',
                'verbose_name_plural': 'Resultados de puntuación',
            },
        ),
        migrations.CreateModel(
            name='PunctuationAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.PositiveSmallIntegerField()),
                ('selected_index', models.PositiveIntegerField()),
                ('correct_index', models.PositiveIntegerField()),
                ('expected_punctuation', models.CharField(max_length=10)),
                ('is_correct', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Intento de puntuación',
                'verbose_name_plural': 'Intentos de puntuación',
            },
        ),
        migrations.CreateModel(
            name='PasswordResetCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reset_codes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MultipleChoiceResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_slug', models.CharField(max_length=50)),
                ('total_questions', models.PositiveSmallIntegerField(default=3)),
                ('correct_answers', models.PositiveSmallIntegerField()),
                ('percentage', models.FloatField()),
                ('recommendation', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('run_id', models.CharField(db_index=True, max_length=36)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resultado de ejercicio de opción múltiple',
                'verbose_name_plural': 'Resultados de ejercicios de opción múltiple',
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_slug', models.CharField(max_length=50)),
                ('question_number', models.PositiveSmallIntegerField()),
                ('selected_option', models.CharField(max_length=10)),
                ('correct_option', models.CharField(max_length=10)),
                ('is_correct', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('run_id', models.CharField(db_index=True, max_length=36)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Intento de ejercicio de opción múltiple',
                'verbose_name_plural': 'Intentos de ejercicios de opción múltiple',
            },
        ),
        migrations.CreateModel(
            name='FinalEvalLock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taken', models.BooleanField(default=False)),
                ('taken_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExplanationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_response', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='explanations', to='Academico.exerciseattempt')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='exerciseattempt',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Exercise2Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_questions', models.PositiveSmallIntegerField(default=3)),
                ('correct_answers', models.PositiveSmallIntegerField()),
                ('percentage', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resultado de ejercicio 2',
                'verbose_name_plural': 'Resultados de ejercicio 2',
            },
        ),
        migrations.CreateModel(
            name='Exercise2Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.PositiveSmallIntegerField()),
                ('selected_option', models.CharField(max_length=10)),
                ('correct_option', models.CharField(max_length=10)),
                ('is_correct', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Intento de ejercicio 2',
                'verbose_name_plural': 'Intentos de ejercicio 2',
            },
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cedula', models.CharField(db_index=True, max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=80)),
                ('apellido', models.CharField(max_length=80)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='estudiante', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cedula', models.CharField(db_index=True, max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=80)),
                ('apellido', models.CharField(max_length=80)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='docente', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_slug', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Actividad del calendario',
                'verbose_name_plural': 'Actividades del calendario',
            },
        ),
        migrations.CreateModel(
            name='ActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.CharField(db_index=True, max_length=64)),
                ('exercise_number', models.PositiveSmallIntegerField()),
                ('action', models.CharField(max_length=64)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SurveyResultDocente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_slug', models.CharField(default='encuesta', max_length=50)),
                ('total_questions', models.PositiveSmallIntegerField()),
                ('run_id', models.CharField(db_index=True, max_length=36)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resultado de encuesta',
                'verbose_name_plural': 'Resultados de encuestas',
                'unique_together': {('user', 'survey_slug', 'run_id')},
            },
        ),
        migrations.CreateModel(
            name='SurveyResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_slug', models.CharField(default='encuesta', max_length=50)),
                ('total_questions', models.PositiveSmallIntegerField()),
                ('run_id', models.CharField(db_index=True, max_length=36)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resultado de encuesta',
                'verbose_name_plural': 'Resultados de encuestas',
                'unique_together': {('user', 'survey_slug', 'run_id')},
            },
        ),
        migrations.CreateModel(
            name='SurveyAttemptDocente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_slug', models.CharField(default='encuesta', max_length=50)),
                ('question_number', models.PositiveSmallIntegerField()),
                ('selected_option', models.CharField(max_length=10)),
                ('run_id', models.CharField(db_index=True, max_length=36)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Respuesta de encuesta',
                'verbose_name_plural': 'Respuestas de encuestas',
                'unique_together': {('user', 'survey_slug', 'run_id', 'question_number')},
            },
        ),
        migrations.CreateModel(
            name='SurveyAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_slug', models.CharField(default='encuesta', max_length=50)),
                ('question_number', models.PositiveSmallIntegerField()),
                ('selected_option', models.CharField(max_length=10)),
                ('run_id', models.CharField(db_index=True, max_length=36)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Respuesta de encuesta',
                'verbose_name_plural': 'Respuestas de encuestas',
                'unique_together': {('user', 'survey_slug', 'run_id', 'question_number')},
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(db_index=True, max_length=50)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('times_completed', models.PositiveIntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'slug')},
            },
        ),
    ]
